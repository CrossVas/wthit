plugins {
    id "architectury-plugin" version "3.0-SNAPSHOT"
    id "forgified-fabric-loom" version "0.6-SNAPSHOT" apply false
    id "com.github.johnrengelman.shadow" version "5.0.0" apply false
    id "com.matthewprenger.cursegradle" version "1.4.0" apply false
    id "maven-publish"
}

def versionEnv = System.getenv("MOD_VERSION")
if (versionEnv == null || versionEnv.isBlank()) {
    versionEnv = "local"
}

version = "${versionEnv}"

architectury {
    minecraft = rootProject.minecraft
}

subprojects {
    apply plugin: "forgified-fabric-loom"
    apply plugin: "maven-publish"

    dependencies {
        minecraft "com.mojang:minecraft:${minecraft}"
        mappings "net.fabricmc:yarn:${yarn}:v2"
    }

    afterEvaluate {
        task apiJar(type: Jar) {
            dependsOn remapJar

            classifier "api"

            include "fabric.mod.json"
            include "mcp/mobius/waila/api/**"
            exclude "mcp/mobius/waila/api/impl/**"

            from zipTree(remapJar.archiveFile)
        }

        task apiSourcesJar(type: Jar) {
            dependsOn remapSourcesJar

            classifier "api-sources"

            include "fabric.mod.json"
            include "mcp/mobius/waila/api/**"
            exclude "mcp/mobius/waila/api/impl/**"

            from zipTree(remapSourcesJar.output)
        }

        tasks.build.dependsOn apiJar, apiSourcesJar
    }

}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archivesBaseName
    version = rootProject.version
    group = rootProject.group

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        def targetVersion = 8
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = targetVersion
        }
    }

    java {
        withSourcesJar()
    }
}